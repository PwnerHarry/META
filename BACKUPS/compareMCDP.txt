DP_expectation, DP_variance, DP_stat_dist = iterative_policy_evaluation(env, target, gamma=gamma, start_dist=start_dist)
try:
    filename = 'frozenlake_truths_heuristic_1e+09.npz'
    loaded = np.load(filename)
    MC_expectation, MC_variance, MC_stat_dist = loaded['true_expectation'], loaded['true_variance'], loaded['stationary_dist']
    print('difference between expectations: %.2e' % (np.linalg.norm(DP_expectation.reshape(-1) - MC_expectation.reshape(-1), 2)))
    print('difference between variances: %.2e' % (np.linalg.norm(DP_variance.reshape(-1) - MC_variance.reshape(-1), 2)))
    print('difference between stationary distributions: %.2e' % (np.linalg.norm(DP_stat_dist.reshape(-1) - MC_stat_dist.reshape(-1), 2)))
    evaluate = lambda estimate, stat_type: evaluate_estimate(estimate, MC_expectation, MC_variance, MC_stat_dist, stat_type, get_state_set_matrix(env, encoder))
except FileNotFoundError:
    print('MC simulation results not loaded!')
    evaluate = lambda estimate, stat_type: evaluate_estimate(estimate, DP_expectation, DP_variance, DP_stat_dist, stat_type, get_state_set_matrix(env, encoder))
